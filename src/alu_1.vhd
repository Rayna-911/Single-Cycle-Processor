-- This file is generated by automatic tools.
library ieee;
use ieee.std_logic_1164.all;

entity alu_1 is
  port (
     ctrl_0 : in std_logic;
    ctrl_1 : in std_logic;
        c   : in std_logic;    
    A     : in std_logic;
    B     : in std_logic;


    cout  : out std_logic;  -- ‘1’ -> carry out
 --   of      : out std_logic;  -- '1' --> overflow
--and1, or1, mux21,not1, nor1, adder1: out std_logic;
    R     : out std_logic
    
  );
end alu_1;

architecture alu_1_struct of alu_1 is

signal and_0_out, or_0_out, mux2_0_out,not_0_out, nor_0_out, adder_0_out, Cout_0_out: std_logic;--

component and_gate is port(x,y: in  std_logic; z: out std_logic);
end component ;

component or_gate  is port(x,y: in  std_logic; z: out std_logic);
end component;

-- component xor_gate is port(x,y: in  std_logic; z: out std_logic);
-- end component;

component not_gate is port(x: in std_logic; z:out std_logic);
end component;

component full_adder is port(        x     : in std_logic;
                                     y     : in std_logic;
                                     c   : in std_logic;
                                     cout  : out std_logic;
                                     z     : out std_logic);
end component;

component mux2 is port(	
  sel	  : in	std_logic;
	src0  :	in	std_logic;
	src1  :	in	std_logic;
	z	  : out std_logic);
end component;

component mux4 is port(	
	sel1	  : in	std_logic;
   sel0	  : in	std_logic;
	src00  :	in	std_logic;
	src01  :	in	std_logic;
	src10  :	in	std_logic;
	src11  :	in	std_logic;
	z	  : out std_logic
);
end component;


begin
  and_0: and_gate port map(A,B, and_0_out);
  or_0:  or_gate  port map(A,B, or_0_out);
  not_0: not_gate port map(B, not_0_out);
  mux2_0: mux2    port map(ctrl_0,B,not_0_out,mux2_0_out);
  full_adder_0: full_adder port map(A, mux2_0_out,C, cout_0_out, adder_0_out);
--  xor_0: xor_gate port map(cin_0,cout_0_out,of);
  mux4_0: mux4    port map(ctrl_1,ctrl_0,and_0_out,or_0_out,adder_0_out, adder_0_out,R);
  cout <= cout_0_out;
 --  and1<=and_0_out;
  -- or1<= or_0_out;
 --  mux21<= mux2_0_out;
 --  not1<=not_0_out;
--   nor1<= nor_0_out;
  -- adder1<= adder_0_out;
   
end alu_1_struct;
